#!/usr/bin/expect --

set timeout 9999
set SUB_DOMAIN [ lindex $argv 0 ]
set BASE_DOMAIN [ lindex $argv 1 ]

proc spawn_child {CMD args} {
	# global name
	# global slave
	
	global cols
	global rows
	global spawn_out

	send_user " ---> spawning process $CMD\n"
	if [catch { spawn "$CMD" {*}$args } reason] {
		send_user " ---> ERROR: spawn: $reason\n"
		exit 1
	}
	
	return $spawn_id
}

proc run_set_dns_value {DATA} {
	global SUB_DOMAIN
	global BASE_DOMAIN
	set spawn_id [ spawn_child bash set-dns-value "_acme-challenge.$SUB_DOMAIN" TXT "\"$DATA\"" ]
	expect eof
	lassign [wait] pid spawnid os_error_flag value
	
	send_user " ------> return value: $os_error_flag $value\n"
	
	if {$os_error_flag != 0} {
		send_user " ---> Failed to execute set-dns-value: $os_error_flag\n"
		exit 1
	} elseif {$value != 0} {
		send_user " ---> Failed set-dns-value: exit with $value\n"
		exit 1
	} else {
		send_user " ---> dns set complete.\n"
	}
}

proc main {} {
	global SUB_DOMAIN
	global BASE_DOMAIN

	if { "$::env(DRY_RUN)" == "" } {
		set spawn_id [ spawn_child certbot certonly --manual --preferred-challenges dns -d $SUB_DOMAIN.$BASE_DOMAIN ]
	} else {
		set spawn_id [ spawn_child certbot certonly $::env(DRY_RUN) --manual --preferred-challenges dns -d $SUB_DOMAIN.$BASE_DOMAIN ]
	}
	
	set DATA ""
	
	expect {
		"Keep the existing certificate for now" {
			send \x03
			close
			send_user "\nError: cert exists.\n"
			exit 1
		}
		"Enter email address" {
			send "$::env(EMAIL)\n"
			exp_continue
		}
		"(A)gree" {
			send "A\n"
			exp_continue
		}
		"(Y)es" {
			send "Y\n"
			exp_continue
		}
		"Please deploy a DNS TXT record under the name" {
			set CONTENT ""
			expect {
				"following value:" {
					exp_continue
				}
				"Before continuing," {
					set CONTENT "[ string map {"Before continuing," ""} $expect_out(buffer) ]"
					exp_continue
				}
				"Press Enter to Continue" {
					send_user "\n"
					run_set_dns_value [ string trim $CONTENT ]
					send "\n"
					expect eof
				}
			}
		}
		timeout {
			exp_continue
		}
	}
}

if { [catch { main } err] } {
        send_user "Error: $err.\n"
        exit 1
}

